{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGalleryItem.js","Components/Service/Service.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","imageName","hadleAddInputValue","e","setState","currentTarget","value","toLowerCase","trim","handleSubmit","preventDefault","props","onSubmit","resset","this","className","type","onChange","name","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","pictures","onClick","map","picture","id","webformatURL","tags","src","alt","apiService","imageSearch","page","fetch","then","response","ok","json","Promise","reject","Error","Button","Modal","onCloseModal","largeImageURL","ImageGallery","error","picturesData","isOpenModal","status","code","target","onModalOpen","nextPage","prevState","avtoScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","a","loadNewPictures","loadMorePictures","addEventListener","removeEventListener","ressetPage","hits","catch","color","height","width","timeout","toast","message","length","App","onSearchSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"mQAGqBA,E,4MACnBC,MAAQ,CACNC,UAAW,I,EAObC,mBAAqB,SAAAC,GACnB,EAAKC,SAAS,CAAEH,UAAWE,EAAEE,cAAcC,MAAMC,cAAcC,U,EAEjEC,aAAe,SAAAN,GACb,IAAQF,EAAc,EAAKD,MAAnBC,UACRE,EAAEO,iBACF,EAAKC,MAAMC,SAASX,GACpB,EAAKY,U,4CAXP,WACEC,KAAKV,SAAS,CAAEH,UAAW,O,oBAa7B,WACE,IAAQA,EAAca,KAAKd,MAAnBC,UAER,OACE,wBAAQc,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaH,SAAUE,KAAKL,aAA5C,UACE,wBAAQO,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEE,SAAUH,KAAKZ,mBACfgB,KAAK,YACLH,UAAU,mBACVC,KAAK,OACLG,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZf,MAAOL,a,GArCoBqB,a,uCCFxB,SAASC,EAAT,GAAkD,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACnD,OAAOD,EAASE,KAAI,SAAAC,GAClB,IAAQC,EAA2BD,EAA3BC,GAAIC,EAAuBF,EAAvBE,aAAcC,EAASH,EAATG,KAC1B,OACE,oBAAaf,UAAU,mBAAvB,SACE,qBACEgB,IAAKF,EACLG,IAAKF,EACLf,UAAU,yBACVU,QAAS,kBAAMA,EAAQE,OALlBC,MCLA,SAASK,EAAWC,EAAaC,GAG9C,OAAOC,MAAM,GAAD,OADK,2BACL,sDAC+CF,EAD/C,iBACmEC,EADnE,4BAFI,uCAIdE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iLCPrB,SAASC,EAAT,GAA8B,IAAZnB,EAAW,EAAXA,QAC/B,OACE,qBAAKV,UAAU,OAAf,SACE,wBAAQC,KAAK,OAAOD,UAAU,eAAeU,QAASA,EAAtD,yBCHS,SAASoB,EAAT,GAA2C,IAA1BlB,EAAyB,EAAzBA,QAASmB,EAAgB,EAAhBA,aACvC,OACE,qBAAK/B,UAAU,UAAUU,QAASqB,EAAlC,SACE,qBAAK/B,UAAU,QAAf,SACE,qBAAKgB,IAAKJ,EAAQoB,cAAef,IAAKL,EAAQG,W,qBCGjCkB,E,4MACnBhD,MAAQ,CACNmC,KAAM,EACNc,MAAO,KACPC,aAAc,GACdC,aAAa,EACbxB,QAAS,GACTyB,OAAQ,Q,EAsBVN,aAAe,SAAA3C,GACE,WAAXA,EAAEkD,MAAqBlD,EAAEE,gBAAkBF,EAAEmD,QAC/C,EAAKlD,SAAS,CAAE+C,aAAa,K,EA2BjCI,YAAc,SAAA5B,GACZ,EAAKvB,SAAS,CAAE+C,aAAa,EAAMxB,QAASA,K,EAG9C6B,SAAW,WACT,EAAKpD,UAAS,SAAAqD,GAAS,MAAK,CAC1BtB,KAAOsB,EAAUtB,MAAQ,O,EAM7BuB,WAAa,WACXC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,Y,+FA/Dd,WAAyBC,EAAWT,GAApC,eAAAU,EAAA,yDACUhC,EAASrB,KAAKd,MAAdmC,KACJ+B,EAAUjE,YAAca,KAAKH,MAAMV,UAFzC,uBAGIa,KAAKV,SAAS,CAAEgD,OAAQ,YAH5B,SAIUtC,KAAKsD,kBAJf,UAMMX,EAAUtB,OAASA,EANzB,uBAOIrB,KAAKV,SAAS,CAAEgD,OAAQ,sBAP5B,SAQUtC,KAAKuD,mBARf,gD,wFAWA,WACEV,OAAOW,iBAAiB,UAAWxD,KAAKgC,gB,kCAG1C,WACEa,OAAOY,oBAAoB,UAAWzD,KAAKgC,gB,oEAS7C,iCAAAqB,EAAA,6DACErD,KAAK0D,aADP,SAEQvC,EAAWnB,KAAKH,MAAMV,UAAWa,KAAKd,MAAMmC,MAC/CE,MAAK,SAAAb,GAEJ,EAAKpB,SAAS,CAAE8C,aAAc1B,EAASiD,KAAMrB,OAAQ,gBAEtDsB,OAAM,SAAAzB,GAAK,OAAI,EAAK7C,SAAS,CAAE6C,QAAOG,OAAQ,gBAPnD,OAQEtC,KAAK4C,aARP,gD,2HAWA,iCAAAS,EAAA,sEACQlC,EAAWnB,KAAKH,MAAMV,UAAWa,KAAKd,MAAMmC,MAC/CE,MAAK,SAAAb,GAEJ,EAAKpB,UAAS,SAAAqD,GAAS,MAAK,CAC1BP,aAAa,GAAD,mBAAMO,EAAUP,cAAhB,YAAiC1B,EAASiD,OACtDrB,OAAQ,kBAGXsB,OAAM,SAAAzB,GAAK,OAAI,EAAK7C,SAAS,CAAE6C,QAAOG,OAAQ,gBATnD,OAUEtC,KAAK4C,aAVP,gD,8EAqBA,WACE5C,KAAKV,SAAS,CAAE+B,KAAM,M,oBASxB,WACE,MAA8DrB,KAAKd,MAA3DiD,EAAR,EAAQA,MAAOG,EAAf,EAAeA,OAAQF,EAAvB,EAAuBA,aAAcvB,EAArC,EAAqCA,QAASwB,EAA9C,EAA8CA,YAE9C,MAAe,SAAXC,EAEA,mBAAGrC,UAAU,qBAAb,qDAMW,YAAXqC,EAEA,cAAC,IAAD,CACErC,UAAU,SACVC,KAAK,OACL2D,MAAM,OACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAKA,sBAAX1B,EAEA,qCACE,oBAAIrC,UAAU,eAAd,SACE,cAACQ,EAAD,CACEC,SAAU0B,EACVzB,QAASX,KAAKyC,gBAGlB,cAAC,IAAD,CACExC,UAAU,SACVC,KAAK,OACL2D,MAAM,OACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,SAMF,aAAX1B,EACK2B,IAAM9B,MAAMA,EAAM+B,SAEZ,aAAX5B,EAEA,qCACE,oBAAIrC,UAAU,eAAd,SACE,cAACQ,EAAD,CACEC,SAAU0B,EACVzB,QAASX,KAAKyC,gBAGjBJ,GACC,cAACN,EAAD,CAAOlB,QAASA,EAASmB,aAAchC,KAAKgC,eAE7CI,EAAa+B,OAAS,GAAK,cAACrC,EAAD,CAAQnB,QAASX,KAAK0C,mBAZxD,M,GA7HsClC,aCgB3B4D,E,4MAlBblF,MAAQ,CACNC,UAAW,I,EAGbkF,eAAiB,SAAAlF,GACf,EAAKG,SAAS,CAAEH,e,4CAGlB,WACE,OACE,sBAAKc,UAAU,MAAf,UACE,cAAC,EAAD,CAAWH,SAAUE,KAAKqE,iBAC1B,cAAC,EAAD,CAAclF,UAAWa,KAAKd,MAAMC,mB,GAb1BqB,aCDlB8D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,W","file":"static/js/main.deecd4d5.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  resset() {\n    this.setState({ imageName: '' });\n  }\n\n  hadleAddInputValue = e => {\n    this.setState({ imageName: e.currentTarget.value.toLowerCase().trim() });\n  };\n  handleSubmit = e => {\n    const { imageName } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(imageName);\n    this.resset();\n  };\n\n  render() {\n    const { imageName } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.hadleAddInputValue}\n            name=\"imageName\"\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={imageName}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nexport default function ImageGalleryItem({ pictures, onClick }) {\n  return pictures.map(picture => {\n    const { id, webformatURL, tags } = picture;\n    return (\n      <li key={id} className=\"ImageGalleryItem\">\n        <img\n          src={webformatURL}\n          alt={tags}\n          className=\"ImageGalleryItem-image\"\n          onClick={() => onClick(picture)}\n        />\n      </li>\n    );\n  });\n}\n\nImageGalleryItem.propTypes = {\n  pictures: PropTypes.array.isRequired,\n  onClick: PropTypes.func,\n};\n","export default function apiService(imageSearch, page) {\n  const API_KEY = '22326636-8d9d25d1f9cff7f7e66e8dd75';\n  const BASE_URL = 'https://pixabay.com/api/';\n  return fetch(\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${imageSearch}&page=${page}&per_page=12&key=${API_KEY}`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Это ошибка, её нужно как-то решить'));\n  });\n}\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <div className=\"more\">\n      <button type=\"text\" className=\"more-loadBtn\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n}\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Modal({ picture, onCloseModal }) {\n  return (\n    <div className=\"Overlay\" onClick={onCloseModal}>\n      <div className=\"Modal\">\n        <img src={picture.largeImageURL} alt={picture.tags} />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  picture: PropTypes.object.isRequired,\n  onCloseModal: PropTypes.func,\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport apiService from '../Service/Service';\nimport Button from '../Button/Button';\nimport Modal from '../Modal/Modal';\nimport Loader from 'react-loader-spinner';\n\nexport default class ImageGallery extends Component {\n  state = {\n    page: 1,\n    error: null,\n    picturesData: [],\n    isOpenModal: false,\n    picture: '',\n    status: 'idle',\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { page } = this.state;\n    if (prevProps.imageName !== this.props.imageName) {\n      this.setState({ status: 'pending' });\n      await this.loadNewPictures();\n    }\n    if (prevState.page !== page ) {\n      this.setState({ status: 'pending-nextBlock' });\n      await this.loadMorePictures();\n    }\n  }\n  componentDidMount() {\n    window.addEventListener('keydown', this.onCloseModal);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onCloseModal);\n  }\n\n  onCloseModal = e => {\n    if (e.code === 'Escape' || e.currentTarget === e.target) {\n      this.setState({ isOpenModal: false });\n    }\n  };\n\n  async loadNewPictures() {\n    this.ressetPage();\n    await apiService(this.props.imageName, this.state.page)\n      .then(pictures => {\n        // console.log(pictures.hits);\n        this.setState({ picturesData: pictures.hits, status: 'resolved' });\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }));\n    this.avtoScroll();\n  }\n\n  async loadMorePictures() {\n    await apiService(this.props.imageName, this.state.page)\n      .then(pictures => {\n        // console.log(pictures.hits);\n        this.setState(prevState => ({\n          picturesData: [...prevState.picturesData, ...pictures.hits],\n          status: 'resolved',\n        }));\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }));\n    this.avtoScroll();\n  }\n  onModalOpen = picture => {\n    this.setState({ isOpenModal: true, picture: picture });\n  };\n\n  nextPage = () => {\n    this.setState(prevState => ({\n      page: (prevState.page += 1),\n    }));\n  };\n  ressetPage() {\n    this.setState({ page: 1 });\n  }\n  avtoScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    const { error, status, picturesData, picture, isOpenModal } = this.state;\n\n    if (status === 'idle') {\n      return (\n        <p className=\"notifyText-onStart\">\n          Please! Enter word for searching images\n        </p>\n      );\n    }\n\n    if (status === 'pending') {\n      return (\n        <Loader\n          className=\"loader\"\n          type=\"Grid\"\n          color=\"blue\"\n          height={100}\n          width={100}\n          timeout={4000}\n        />\n      );\n    }\n\n    if (status === 'pending-nextBlock') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem\n              pictures={picturesData}\n              onClick={this.onModalOpen}\n            />\n          </ul>\n          <Loader\n            className=\"loader\"\n            type=\"Grid\"\n            color=\"blue\"\n            height={100}\n            width={100}\n            timeout={4000}\n          />\n        </>\n      );\n    }\n\n    if (status === 'rejected') {\n      return toast.error(error.message);\n    }\n    if (status === 'resolved') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem\n              pictures={picturesData}\n              onClick={this.onModalOpen}\n            />\n          </ul>\n          {isOpenModal && (\n            <Modal picture={picture} onCloseModal={this.onCloseModal} />\n          )}\n          {picturesData.length > 0 && <Button onClick={this.nextPage} />}\n        </>\n      );\n    }\n  }\n}\n\nImageGallery.propTypes = {\n  imageName: PropTypes.string.isRequired,\n};\n","import './App.css';\nimport { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  onSearchSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onSearchSubmit} />\n        <ImageGallery imageName={this.state.imageName} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}